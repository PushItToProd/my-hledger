#!/usr/bin/env python3
"""
Utility for checking whether bills have been paid. Create a file named
bills.json in the same directory as your $LEDGER_FILE or set the BILL_FILE
environment variable.

The bills file contains JSON object mapping descriptive account names to hledger
queries. For example:

    {"Phone Bill": "'Budget:Phone Bill'"}

Note that account queries are passed directly to the hledger command on the
shell, so strings containing spaces need to be quoted.
"""
from datetime import date
import argparse
import json
import os
import subprocess
import sys


BILL_FILE_NAME = 'bills.json'


def get_bill_file_path():
    """
    Get the bills file from either the environment variable BILL_FILE or by
    checking for a file named bills.json in LEDGER_FILE.
    """
    if os.environ.get('BILL_FILE'):
        return os.environ['BILL_FILE']
    if os.environ.get('LEDGER_FILE'):
        path = os.path.join(os.path.dirname(os.environ['LEDGER_FILE']),
                            BILL_FILE_NAME)
        if os.path.isfile(path):
            return path
    raise Exception('Could not find bill file. Set the BILL_FILE environment '
                    'variable or create a file named bills.json in the same '
                    'directory as your $LEDGER_FILE.')

def green(s):
    """
    Wrap a string in ANSI terminal escape codes to make it green.
    """
    return f"\u001b[32m{s}\u001b[0m"


def red(s):
    """
    Wrap a string in ANSI terminal escape codes to make it green.
    """
    return f"\u001b[31m{s}\u001b[0m"


def load_bills(bill_file):
    with open(bill_file) as f:
        return json.load(f)


def get_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('-p', '--period', default=date.today().strftime("%Y-%m"))
    return parser


def txns_match(bill_name, period, query):
    cmd = f"hledger reg -p {period} {query}"
    r = subprocess.run(cmd, capture_output=True, shell=True)
    if r.stdout:
        print(green(f"{bill_name} paid"))
    else:
        print(red(f"{bill_name} not paid!"))


if __name__ == "__main__":
    args = get_parser().parse_args()
    bill_file = get_bill_file_path()
    bills = load_bills(bill_file)
    print(f"Bills for period {args.period}")
    for bill_name, query in bills.items():
        txns_match(bill_name, args.period, query)
